# from secret import e1, e2, flag
# from Crypto.Util.number import *
#
# msg = bytes_to_long(b"oh I want to show you my e1: " + str(e1).encode())
# p = getPrime(512)
# q = getPrime(512)
# N = p * q
# print(N)
# print(pow(msg, 3, N))
#
# msg = bytes_to_long(flag)
# p = getPrime(1024)
# q = getPrime(1024)
# N = p * q
# c = pow(msg, e2, N)
# print(N, e2)
# print(c)
# print(pow(p + q, e1, N))
# print(pow(p + e1, q, N))
#
# N1 = 112842319230881829791164649401925115650934556380136549115890781571908466974568111372041484431268411139720580256215460213210013346505231423272598135353194974928624679118441056428715729964753632375698107326863727010770512744909030841389602321360344910454651703454822218986219957912781014228727184913795960365343
#
# C1 = 10137498120569530391533201884900691477885816612089415737957907786723108878704638859064995867258254368126599191347885353356185517827180430785650882982148121448472108139399821874073511558670643850288625439378873689903435078905164609067925156914897644656724081513
#
# N2 = 17092700248593793241096216917558285877084172403392677133723563228142896920297434989031605985220320145877639740472180707268659514814181647307718823490944464411274395654277694349621379668214892995668786173168446413688256474396444357094684317174020279727553295678593112077284023101087958667367644895330019229790198466899193827795930369090064761967256593713513872948515539475866640324779503857384400256621577893795202806573757462851694303584198606370100079395910878019671166642836198050194918491648924242610187838412924096234701868212071106568382477651830665109122328580411875202164817518811604448911713815529884461518701
# E2 = 2922209
#
# C2 = 2784981463655694138395968911510466828492984225671509951104432800717734648575257999823590078359538130748695084280663686971421273049142362366832543959884758504264567880681000682729010833606158053686118356182853474311302515735273494863946327258109661301752675798773425012105416221236030578786869128139458076642709437858277297736728522234324552198889812821806101218579553709458877125079742712670286941956167595698683333768167232076288893828411038220859892704540144171575533277465064999135407934868122492402800366635363929753412860294580700422059291757850561527039998473138877738670753728973880103184851072062319183258588
#
# C_P+Q = 14293233807426018471060207469298386009315082088020900619849792895161084399305335276462277349267378208840941191264110331484029313679199035878578441641111439525181002953830689279442382210999432460601907786181822698687566955551071508169594927947032848230004360571340635014439647879041812315078570546437432335059162593926335009082476295821521470174140591321131063673124971207135171508637076503243285385062267312255808578369973554593062214907316997824160488687570448929846475734427223674803004908814509517526850036006239882150122043450447357567832380796940860627219176000109175397771317115900339438359839935817357440377191
#
# C_P+E1 = 12738122668455222514194870603084896276339284790378866744886085886853034005321863361165414545268115596089117952806313014626407015282678499510799121840539494657694756615829311874742439458710346497461983287816258014753461499938222360673617740792615330075803990167041017937375360221413515835427242522444293845058856225196494502222323762189108251671711662946860122928977733614716455955751075681981099143980918193404164680160820387528412865290757918413221000057004069560186224176529818338527384398112186573549056588985673163386549801412486203552746215575932691096444806138177050530796046756994214498574898924107061982653483
#
#
# ###
# e1 = 2787689
import gmpy2
from Crypto.Util.number import long_to_bytes, bytes_to_long

e1 = 2787689
e2 = 2922209
N = 17092700248593793241096216917558285877084172403392677133723563228142896920297434989031605985220320145877639740472180707268659514814181647307718823490944464411274395654277694349621379668214892995668786173168446413688256474396444357094684317174020279727553295678593112077284023101087958667367644895330019229790198466899193827795930369090064761967256593713513872948515539475866640324779503857384400256621577893795202806573757462851694303584198606370100079395910878019671166642836198050194918491648924242610187838412924096234701868212071106568382477651830665109122328580411875202164817518811604448911713815529884461518701
c = 2784981463655694138395968911510466828492984225671509951104432800717734648575257999823590078359538130748695084280663686971421273049142362366832543959884758504264567880681000682729010833606158053686118356182853474311302515735273494863946327258109661301752675798773425012105416221236030578786869128139458076642709437858277297736728522234324552198889812821806101218579553709458877125079742712670286941956167595698683333768167232076288893828411038220859892704540144171575533277465064999135407934868122492402800366635363929753412860294580700422059291757850561527039998473138877738670753728973880103184851072062319183258588
c1 = 14293233807426018471060207469298386009315082088020900619849792895161084399305335276462277349267378208840941191264110331484029313679199035878578441641111439525181002953830689279442382210999432460601907786181822698687566955551071508169594927947032848230004360571340635014439647879041812315078570546437432335059162593926335009082476295821521470174140591321131063673124971207135171508637076503243285385062267312255808578369973554593062214907316997824160488687570448929846475734427223674803004908814509517526850036006239882150122043450447357567832380796940860627219176000109175397771317115900339438359839935817357440377191
c2 = 12738122668455222514194870603084896276339284790378866744886085886853034005321863361165414545268115596089117952806313014626407015282678499510799121840539494657694756615829311874742439458710346497461983287816258014753461499938222360673617740792615330075803990167041017937375360221413515835427242522444293845058856225196494502222323762189108251671711662946860122928977733614716455955751075681981099143980918193404164680160820387528412865290757918413221000057004069560186224176529818338527384398112186573549056588985673163386549801412486203552746215575932691096444806138177050530796046756994214498574898924107061982653483
q = gmpy2.gcd(pow(c2 - e1, e1, N) - c1, N)
#print(q)
p = N // q
#print(p)
phi = (p - 1) * (q - 1)
d = gmpy2.invert(e2, phi)
m = pow(c, d, N)
flag = long_to_bytes(m)
print(flag)